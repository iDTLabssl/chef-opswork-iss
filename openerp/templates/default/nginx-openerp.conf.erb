proxy_cache_path /tmp/nginx levels=1:2 keys_zone=my_zone:10m inactive=360m;
proxy_cache_key "$scheme$request_method$host$request_uri";

# Choose between www and non-www, listen on the *wrong* one and redirect to
# the right one -- http://wiki.nginx.org/Pitfalls#Server_Name
#
server {
  listen [::]:80;
  listen 80;

  # listen on both hosts
  server_name <%=node[:opsworks][:instance][:ip]%> *.<%=node[:openerp][:servername]%>;

  # and redirect to the https host (declared below)
  # avoiding http://www -> https://www -> https:// chain.
  return 301 https://$host$request_uri$is_args$args;
}

server {

  # listen [::]:443 ssl spdy accept_filter=dataready;  # for FreeBSD
  # listen 443 ssl spdy accept_filter=dataready;  # for FreeBSD
  # listen [::]:443 ssl spdy deferred;  # for Linux
  # listen 443 ssl spdy deferred;  # for Linux
  listen [::]:443 ssl spdy;
  listen 443 ssl spdy;

  # The host name to respond to
  server_name *.<%=node[:openerp][:servername]%>;

   location / {
     
     include proxy_params;
     proxy_pass               http://127.0.0.1:8069;
   }

   location /longpolling {
      include proxy_params;
      proxy_pass              http://127.0.0.1:8072;
   }

  include h5bp/directive-only/ssl.conf;


  #Specify a charset
  charset utf-8;

  # Custom 404 page
  error_page 500 502 503 504 /500.html;
location = /500.html {
    root <%=node[:openerp][:static_http_document_root]%>404/;
}

location ~* /web/database/manager {
        auth_basic "Restricted Area Login";
        auth_basic_user_file /etc/nginx/.htpasswd;
proxy_pass               http://127.0.0.1:8069;

    }

  # Include the basic h5bp config set
  include h5bp/basic.conf;

  # Include the spdy h5bp config set
  include h5bp/directive-only/spdy.conf;

  # include stappling
  include h5bp/directive-only/ssl_stapling.conf;

  # Include the spdy h5bp config set
  include h5bp/directive-only/cache-file-descriptors.conf;
}
